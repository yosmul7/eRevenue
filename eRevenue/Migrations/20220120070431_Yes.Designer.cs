// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eRevenue.Data;

namespace eRevenue.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220120070431_Yes")]
    partial class Yes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eRevenue.Models.Center", b =>
                {
                    b.Property<int>("CenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CenterNameAmh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationLevelId")
                        .HasColumnType("int");

                    b.HasKey("CenterId");

                    b.HasIndex("OrganizationLevelId");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("eRevenue.Models.OrganizationLevel", b =>
                {
                    b.Property<int>("OrganizationLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationLevelNameAmh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationLevelId");

                    b.ToTable("OrganizationLevels");
                });

            modelBuilder.Entity("eRevenue.Models.RevenuePlan", b =>
                {
                    b.Property<int>("RevenuePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<int?>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationLevelId")
                        .HasColumnType("int");

                    b.Property<decimal>("RevenuePlanAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("RevenuePlanDirect")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("RevenuePlanIndirect")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("RevenuePlanMunicipality")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("RevenuePlanId");

                    b.HasIndex("CenterId");

                    b.HasIndex("OrganizationLevelId");

                    b.HasIndex("YearId");

                    b.ToTable("RevenuePlans");
                });

            modelBuilder.Entity("eRevenue.Models.RevenueTypeDetail", b =>
                {
                    b.Property<int>("RevenueTypeDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CenterId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("RevenueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RevenuePlan")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("RevenueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevenueTypeDetailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RevenueTypeDetailId");

                    b.HasIndex("CenterId");

                    b.HasIndex("OrganizationLevelId");

                    b.ToTable("RevenueTypeDetails");
                });

            modelBuilder.Entity("eRevenue.Models.Year", b =>
                {
                    b.Property<int>("YearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearId");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("eRevenue.Models.Center", b =>
                {
                    b.HasOne("eRevenue.Models.OrganizationLevel", "OrganizationLevel")
                        .WithMany()
                        .HasForeignKey("OrganizationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationLevel");
                });

            modelBuilder.Entity("eRevenue.Models.RevenuePlan", b =>
                {
                    b.HasOne("eRevenue.Models.Center", "Center")
                        .WithMany("RevenuePlan")
                        .HasForeignKey("CenterId")
                        .HasConstraintName("FK_RevenuePlan_CenterId")
                        .IsRequired();

                    b.HasOne("eRevenue.Models.OrganizationLevel", "OrganizationLevel")
                        .WithMany("RevenuePlan")
                        .HasForeignKey("OrganizationLevelId")
                        .HasConstraintName("FK_RevenuePlan_OrganizationLevelId")
                        .IsRequired();

                    b.HasOne("eRevenue.Models.Year", "Year")
                        .WithMany("RevenuePlan")
                        .HasForeignKey("YearId")
                        .HasConstraintName("FK_RevenuePlan_Year")
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("OrganizationLevel");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("eRevenue.Models.RevenueTypeDetail", b =>
                {
                    b.HasOne("eRevenue.Models.Center", null)
                        .WithMany("RevenueTypeDetail")
                        .HasForeignKey("CenterId");

                    b.HasOne("eRevenue.Models.OrganizationLevel", null)
                        .WithMany("RevenueTypeDetail")
                        .HasForeignKey("OrganizationLevelId");
                });

            modelBuilder.Entity("eRevenue.Models.Center", b =>
                {
                    b.Navigation("RevenuePlan");

                    b.Navigation("RevenueTypeDetail");
                });

            modelBuilder.Entity("eRevenue.Models.OrganizationLevel", b =>
                {
                    b.Navigation("RevenuePlan");

                    b.Navigation("RevenueTypeDetail");
                });

            modelBuilder.Entity("eRevenue.Models.Year", b =>
                {
                    b.Navigation("RevenuePlan");
                });
#pragma warning restore 612, 618
        }
    }
}
